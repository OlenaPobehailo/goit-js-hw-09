{"mappings":"qhBAQA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEhCC,EAAgB,C,SACpBL,E,MACAC,GAEF,OAAO,IAAIK,SAAQ,CAACC,EAASC,KACvBN,EAEFK,EAAQF,GAGRG,EAAOH,EAAc,G,CA7CXI,SAASC,cAAc,SAC/BC,iBAAiB,UAEzB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOH,EAAEI,OAAOf,MAAMgB,OAC9BC,EAAOH,OAAOH,EAAEI,OAAOE,KAAKD,OAC5BE,EAASJ,OAAOH,EAAEI,OAAOG,OAAOF,OACpCG,EAAAvB,GAASwB,OAAOC,KAAK,CAAEtB,SAAU,WAAYuB,SAAU,UAEvD,IAAK,IAAIC,EAAW,EAAGA,GAAYL,EAAQK,GAAY,EACrDzB,EAAcyB,EAAUV,GACrBW,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjByB,YAAW,KACTN,EAAAvB,GAASwB,OAAOM,QACd,uBAAqB3B,QAAiBC,MAAU,GAEjDA,EAAM,IAEV2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClByB,YAAW,KACTN,EAAAvB,GAASwB,OAAOQ,QACd,sBAAoB7B,QAAeC,MAAU,GAE9CA,EAAM,IAGba,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["/*\nHTML містить розмітку форми, в поля якої користувач буде вводити першу затримку в мілісекундах, крок збільшення затримки для кожного промісу після першого і кількість промісів, яку необхідно створити.\n\nНапиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay) стільки разів, скільки ввели в поле amount. Під час кожного виклику передай їй номер промісу (position), що створюється, і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n\nДоповни код функції createPromise таким чином, щоб вона повертала один проміс, який виконується або відхиляється через delay часу. Значенням промісу повинен бути об'єкт, в якому будуть властивості position і delay зі значеннями однойменних параметрів. Використовуй початковий код функції для вибору того, що потрібно зробити з промісом - виконати або відхилити.\n*/\n\nimport Notiflix from 'notiflix';\n\nconst formRef = document.querySelector('.form');\nformRef.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let delay = Number(e.target.delay.value);\n  let step = Number(e.target.step.value);\n  let amount = Number(e.target.amount.value);\n  Notiflix.Notify.init({ position: 'left-top', distance: '150px' });\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n        }, delay);\n      });\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const objectPromise = {\n    position,\n    delay,\n  };\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      // Fulfill\n      resolve(objectPromise);\n    } else {\n      // Reject\n      reject(objectPromise);\n    }\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","objectPromise","Promise","resolve","reject","document","querySelector","addEventListener","e","preventDefault","delay1","Number","target","value","step","amount","$parcel$interopDefault","Notify","init","distance","position1","then","setTimeout","success","catch","failure"],"version":3,"file":"03-promises.fb26361d.js.map"}